= Directories:
    'formulations': contains derivations related to the MPC in TeX format.
     It should be sufficient to run 'make' in this folder to compile 
     documentation.

    'octave': contains implementation of the MPC.
        'common': Functions, which form matrices, plot data, and initialize
        parameters.

        'formulation_01': The working directory, from which the simulation is
        started.


= Octave/MATLAB
Octave is not 100% compatible with MATLAB, I do not test the sources in MATLAB, 
hence they may not work there. In particular, the format of call to the QP
solver is different in MATLAB.


= Configuration
    'init_walk_*': Are used to define walk -- the number of steps and their 
    orientations, reference velocity, initial position. See comments in
    'octave/common/init_walk_01.m'. If you create your own walk, you also have 
    to create script 'walk_01.m' in the 'formulation_01' folder, the purpose
    of the script is to load parameters and start simulation.

    'parameters_mpc6.m': Contains parameters of the mpc problem -- gains, the
    length of the preview window, duration of one sampling iteration. See
    comments in the script and TeX derivations.

    'parameters_robot.m': Parameters of a robot -- size of feet, length of a step 
    and so on. This file you most likely need to edit. See comments inside.


= Execution of simulation
    1) Start Octave.
    2) Go to 'formulation_01' directory.
    3) Execute 'walk_01' script (or walk_02, walk_03, ...).


= Plots
    The following conventions are used:
    1) The footsteps are shown as rectangles.
    2) Double supports are shown in black, left single supports -- in blue, right
    single supports -- in red.
    3) Planned footsteps are drawn using thin lines. Executed/fixed footsteps are
    drawn using thicker lines.
    4) The trajectory of ZMP is shown in cyan. The trajectory of CoM -- in blue.


= Customization
    If you want to disable plotting or perform some operations during simulation, 
    you may edit 'simulation_loop.m' script in the 'formulation_01' folder.
